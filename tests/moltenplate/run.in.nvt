# run.in.nvt
# This file is a modified version of the "system.in" input script 
# created by moltemplate.
#
# --  Usage  --
#
# lmp_g++ -i run.in.nvt
# (assuming lmp_g++ is the name of your lammps binary)
#
# --  Prerequisite Input Files:  --
# systen.data, system.in.init, system.in.settings
#
#     You can generate these files by running moltemplate this way:
# moltemplate.sh -atomstyle "full" system.lt
# ---------------------------------

# -- Init section --

include system.in.init       # <-- contains text written to "In Init"

# -- Atom definition section --

#  Here I just read the raw coordinate data generated by moltemplate.sh.
#  (If I were more careful, I would minimize the system before the run command.)

read_data system.data

# -- Settings Section --

include "system.in.settings"

# -- Run section --


timestep        2.0
dump            1 all custom 2000 traj_nvt.lammpstrj id mol type x y z ix iy iz

# To use Langevin dynamics in LAMMPS you need both "fix langevin" and "fix nve".
# (See http://lammps.sandia.gov/doc/fix_langevin.html for details.)

fix fxlan all langevin 300.0 300.0 5000.0 48279 
fix fxnve all nve


thermo_style    custom step temp pe etotal press vol epair ebond eangle edihed
thermo          2000  # time interval for printing out "thermo" data

run		100000

write_restart  system_after_nvt.rst

